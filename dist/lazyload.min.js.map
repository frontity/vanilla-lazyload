{"version":3,"sources":["lazyload.js"],"names":["global","factory","exports","_typeof","module","define","amd","LazyLoad","this","setTimeoutData","elements","element","timeoutDataName","addOneShotEventListeners","settings","addClass","class_loading","setWasProcessedData","callbackIfSet","callback_set","setSources","isIntersecting","entry","defaultSettings","elements_selector","container","document","threshold","data_src","data_srcset","data_sizes","class_loaded","class_error","load_delay","callback_load","callback_error","to_webp","customSettings","_extends","attribute","trueString","setData","getAttribute","dataPrefix","attrName","value","removeAttribute","getData","getWasProcessedData","getTimeoutData","createInstance","options","event","instance","purgeElements","CustomEvent","detail","err","createEvent","classObj","window","eventString","replaceExtToWebp","condition","detectWebp","canvas","runningOnBrowser","getContext","userAgent","supportsIntersectionObserver","supportsClassList","createElement","supportsWebp","optionsItem","toDataURL","indexOf","setSourcesInChildren","parentTag","dataAttrName","toWebpFlag","childTag","i","children","attrValue","setAttributeIfValue","setSourcesImg","setSourcesBgImage","srcDataValue","setValue","style","backgroundImage","VIDEO","IMG","parentNode","parent","tagName","sizesDataValue","srcsetDataValue","setSourcesIframe","IFRAME","setSourcesVideo","srcDataName","setSourcesFunction","setSourcesFunctions","className","add","removeClass","remove","replace","callback","RegExp","argument","genericLoadEventName","mediaLoadEventName","errorEventName","addEventListener","eventName","handler","loadHandler","removeAllEventListeners","removeEventListener","eventHandler","success","errorHandler","target","addAllEventListeners","managedTags","revealElement","timeoutId","observer","unobserve","clearTimeout","setTimeout","loadAndUnobserve","cancelDelayLoad","loadDelay","root","rootMargin","getObserverSettings","isNaN","_settings","getInstanceSettings","_setObserver","prototype","_manageIntersection","delayLoad","_onIntersection","entries","bind","_elements","loadAll","IntersectionObserver","forEach","_this","load","update","nodeSet","isBot","_observer","Array","slice","call","destroy","observe","_this3","force","length","autoInitialize","lazyLoadOptions"],"mappings":"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","file":"lazyload.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.LazyLoad = factory());\n}(this, (function () { 'use strict';\n\nconst defaultSettings = {\n\telements_selector: \"img\",\n\tcontainer: document,\n\tthreshold: 300,\n\tdata_src: \"src\",\n\tdata_srcset: \"srcset\",\n\tdata_sizes: \"sizes\",\n\tclass_loading: \"loading\",\n\tclass_loaded: \"loaded\",\n\tclass_error: \"error\",\n\tload_delay: 0,\n\tcallback_load: null,\n\tcallback_error: null,\n\tcallback_set: null,\n\tcallback_enter: null,\n\tto_webp: false\n};\n\nvar getInstanceSettings = customSettings => {\n\treturn Object.assign({}, defaultSettings, customSettings);\n};\n\nconst dataPrefix = \"data-\";\nconst processedDataName = \"was-processed\";\nconst timeoutDataName = \"ll-timeout\";\nconst trueString = \"true\";\n\nconst getData = (element, attribute) => {\n\treturn element.getAttribute(dataPrefix + attribute);\n};\n\nconst setData = (element, attribute, value) => {\n\tvar attrName = dataPrefix + attribute;\n\tif (value === null) {\n\t\telement.removeAttribute(attrName);\n\t\treturn;\n\t}\n\telement.setAttribute(attrName, value);\n};\n\nconst setWasProcessedData = element =>\n\tsetData(element, processedDataName, trueString);\n\nconst getWasProcessedData = element =>\n\tgetData(element, processedDataName) === trueString;\n\nconst setTimeoutData = (element, value) =>\n\tsetData(element, timeoutDataName, value);\n\nconst getTimeoutData = element => getData(element, timeoutDataName);\n\nfunction purgeElements(elements) {\n\treturn elements.filter(element => !getWasProcessedData(element));\n}\n\n/* Creates instance and notifies it through the window element */\nconst createInstance = function(classObj, options) {\n\tvar event;\n\tlet eventString = \"LazyLoad::Initialized\";\n\tlet instance = new classObj(options);\n\ttry {\n\t\t// Works in modern browsers\n\t\tevent = new CustomEvent(eventString, { detail: { instance } });\n\t} catch (err) {\n\t\t// Works in Internet Explorer (all versions)\n\t\tevent = document.createEvent(\"CustomEvent\");\n\t\tevent.initCustomEvent(eventString, false, false, { instance });\n\t}\n\twindow.dispatchEvent(event);\n};\n\n/* Auto initialization of one or more instances of lazyload, depending on the \n    options passed in (plain object or an array) */\nfunction autoInitialize(classObj, options) {\n\tif (!options) {\n\t\treturn;\n\t}\n\tif (!options.length) {\n\t\t// Plain object\n\t\tcreateInstance(classObj, options);\n\t} else {\n\t\t// Array of objects\n\t\tfor (let i = 0, optionsItem; (optionsItem = options[i]); i += 1) {\n\t\t\tcreateInstance(classObj, optionsItem);\n\t\t}\n\t}\n}\n\nconst replaceExtToWebp = (value, condition) =>\n\tcondition ? value.replace(/\\.(jpe?g|png)/gi, \".webp\") : value;\n\nconst detectWebp = () => {\n\tvar webpString = \"image/webp\";\n\tvar canvas = document.createElement(\"canvas\");\n\n\tif (canvas.getContext && canvas.getContext(\"2d\")) {\n\t\treturn canvas.toDataURL(webpString).indexOf(`data:${webpString}`) === 0;\n\t}\n\n\treturn false;\n};\n\nconst runningOnBrowser = typeof window !== \"undefined\";\n\nconst isBot =\n\t(runningOnBrowser && !(\"onscroll\" in window)) ||\n\t/(gle|ing|ro)bot|crawl|spider/i.test(navigator.userAgent);\n\nconst supportsIntersectionObserver =\n\trunningOnBrowser && \"IntersectionObserver\" in window;\n\nconst supportsClassList =\n\trunningOnBrowser && \"classList\" in document.createElement(\"p\");\n\nconst supportsWebp = runningOnBrowser && detectWebp();\n\nconst setSourcesInChildren = function(\n\tparentTag,\n\tattrName,\n\tdataAttrName,\n\ttoWebpFlag\n) {\n\tfor (let i = 0, childTag; (childTag = parentTag.children[i]); i += 1) {\n\t\tif (childTag.tagName === \"SOURCE\") {\n\t\t\tlet attrValue = getData(childTag, dataAttrName);\n\t\t\tsetAttributeIfValue(childTag, attrName, attrValue, toWebpFlag);\n\t\t}\n\t}\n};\n\nconst setAttributeIfValue = function(\n\telement,\n\tattrName,\n\tvalue,\n\ttoWebpFlag\n) {\n\tif (!value) {\n\t\treturn;\n\t}\n\telement.setAttribute(attrName, replaceExtToWebp(value, toWebpFlag));\n};\n\nconst setSourcesImg = (element, settings) => {\n\tconst toWebpFlag = supportsWebp && settings.to_webp;\n\tconst srcsetDataName = settings.data_srcset;\n\tconst parent = element.parentNode;\n\n\tif (parent && parent.tagName === \"PICTURE\") {\n\t\tsetSourcesInChildren(parent, \"srcset\", srcsetDataName, toWebpFlag);\n\t}\n\tconst sizesDataValue = getData(element, settings.data_sizes);\n\tsetAttributeIfValue(element, \"sizes\", sizesDataValue);\n\tconst srcsetDataValue = getData(element, srcsetDataName);\n\tsetAttributeIfValue(element, \"srcset\", srcsetDataValue, toWebpFlag);\n\tconst srcDataValue = getData(element, settings.data_src);\n\tsetAttributeIfValue(element, \"src\", srcDataValue, toWebpFlag);\n};\n\nconst setSourcesIframe = (element, settings) => {\n\tconst srcDataValue = getData(element, settings.data_src);\n\n\tsetAttributeIfValue(element, \"src\", srcDataValue);\n};\n\nconst setSourcesVideo = (element, settings) => {\n\tconst srcDataName = settings.data_src;\n\tconst srcDataValue = getData(element, srcDataName);\n\n\tsetSourcesInChildren(element, \"src\", srcDataName);\n\tsetAttributeIfValue(element, \"src\", srcDataValue);\n\telement.load();\n};\n\nconst setSourcesBgImage = (element, settings) => {\n\tconst toWebpFlag = supportsWebp && settings.to_webp;\n\tconst srcDataValue = getData(element, settings.data_src);\n\n\tif (srcDataValue) {\n\t\tlet setValue = replaceExtToWebp(srcDataValue, toWebpFlag);\n\t\telement.style.backgroundImage = `url(\"${setValue}\")`;\n\t}\n};\n\nconst setSourcesFunctions = {\n\tIMG: setSourcesImg,\n\tIFRAME: setSourcesIframe,\n\tVIDEO: setSourcesVideo\n};\n\nconst setSources = (element, settings) => {\n\tconst tagName = element.tagName;\n\tconst setSourcesFunction = setSourcesFunctions[tagName];\n\tif (setSourcesFunction) {\n\t\tsetSourcesFunction(element, settings);\n\t\treturn;\n\t}\n\tsetSourcesBgImage(element, settings);\n};\n\nconst addClass = (element, className) => {\n\tif (supportsClassList) {\n\t\telement.classList.add(className);\n\t\treturn;\n\t}\n\telement.className += (element.className ? \" \" : \"\") + className;\n};\n\nconst removeClass = (element, className) => {\n\tif (supportsClassList) {\n\t\telement.classList.remove(className);\n\t\treturn;\n\t}\n\telement.className = element.className.\n\t\treplace(new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), \" \").\n\t\treplace(/^\\s+/, \"\").\n\t\treplace(/\\s+$/, \"\");\n};\n\nconst callbackIfSet = (callback, argument) => {\n\tif (callback) {\n\t\tcallback(argument);\n\t}\n};\n\nconst genericLoadEventName = \"load\";\nconst mediaLoadEventName = \"loadeddata\";\nconst errorEventName = \"error\";\n\nconst addEventListener = (element, eventName, handler) => {\n\telement.addEventListener(eventName, handler);\n};\n\nconst removeEventListener = (element, eventName, handler) => {\n\telement.removeEventListener(eventName, handler);\n};\n\nconst addAllEventListeners = (element, loadHandler, errorHandler) => {\n\taddEventListener(element, genericLoadEventName, loadHandler);\n\taddEventListener(element, mediaLoadEventName, loadHandler);\n\taddEventListener(element, errorEventName, errorHandler);\n};\n\nconst removeAllEventListeners = (element, loadHandler, errorHandler) => {\n\tremoveEventListener(element, genericLoadEventName, loadHandler);\n\tremoveEventListener(element, mediaLoadEventName, loadHandler);\n\tremoveEventListener(element, errorEventName, errorHandler);\n};\n\nconst eventHandler = function(event, success, settings) {\n\tconst className = success ? settings.class_loaded : settings.class_error;\n\tconst callback = success ? settings.callback_load : settings.callback_error;\n\tconst element = event.target;\n\n\tremoveClass(element, settings.class_loading);\n\taddClass(element, className);\n\tcallbackIfSet(callback, element);\n};\n\nconst addOneShotEventListeners = (element, settings) => {\n\tconst loadHandler = event => {\n\t\teventHandler(event, true, settings);\n\t\tremoveAllEventListeners(element, loadHandler, errorHandler);\n\t};\n\tconst errorHandler = event => {\n\t\teventHandler(event, false, settings);\n\t\tremoveAllEventListeners(element, loadHandler, errorHandler);\n\t};\n\taddAllEventListeners(element, loadHandler, errorHandler);\n};\n\nconst managedTags = [\"IMG\", \"IFRAME\", \"VIDEO\"];\n\nconst loadAndUnobserve = (element, observer, settings) => {\n\trevealElement(element, settings);\n\tobserver.unobserve(element);\n};\n\nconst cancelDelayLoad = element => {\n\tvar timeoutId = getTimeoutData(element);\n\tif (!timeoutId) {\n\t\treturn; // do nothing if timeout doesn't exist\n\t}\n\tclearTimeout(timeoutId);\n\tsetTimeoutData(element, null);\n};\n\nconst delayLoad = (element, observer, settings) => {\n\tvar loadDelay = settings.load_delay;\n\tvar timeoutId = getTimeoutData(element);\n\tif (timeoutId) {\n\t\treturn; // do nothing if timeout already set\n\t}\n\ttimeoutId = setTimeout(function() {\n\t\tloadAndUnobserve(element, observer, settings);\n\t\tcancelDelayLoad(element);\n\t}, loadDelay);\n\tsetTimeoutData(element, timeoutId);\n};\n\nfunction revealElement(element, settings, force) {\n\tif (!force && getWasProcessedData(element)) {\n\t\treturn; // element has already been processed and force wasn't true\n\t}\n\tcallbackIfSet(settings.callback_enter, element);\n\tif (managedTags.indexOf(element.tagName) > -1) {\n\t\taddOneShotEventListeners(element, settings);\n\t\taddClass(element, settings.class_loading);\n\t}\n\tsetSources(element, settings);\n\tsetWasProcessedData(element);\n\tcallbackIfSet(settings.callback_set, element);\n}\n\n/* entry.isIntersecting needs fallback because is null on some versions of MS Edge, and\n   entry.intersectionRatio is not enough alone because it could be 0 on some intersecting elements */\nconst isIntersecting = entry =>\n\tentry.isIntersecting || entry.intersectionRatio > 0;\n\nconst getObserverSettings = settings => ({\n\troot: settings.container === document ? null : settings.container,\n\trootMargin: isNaN(settings.threshold) ? settings.threshold : settings.threshold + \"px\",\n\tthreshold: 0\n});\n\nconst LazyLoad = function(customSettings, elements) {\n\tthis._settings = getInstanceSettings(customSettings);\n\tthis._setObserver();\n\tthis.update(elements);\n};\n\nLazyLoad.prototype = {\n\t_manageIntersection: function(entry) {\n\t\tvar observer = this._observer;\n\t\tvar settings = this._settings;\n\t\tvar loadDelay = this._settings.load_delay;\n\t\tvar element = entry.target;\n\t\tif (isIntersecting(entry)) {\n\t\t\tif (!loadDelay) {\n\t\t\t\tloadAndUnobserve(element, observer, settings);\n\t\t\t} else {\n\t\t\t\tdelayLoad(element, observer, settings);\n\t\t\t}\n\t\t}\n\n\t\t// Writes in and outs in a data-attribute\n\t\tif (!isIntersecting(entry)) {\n\t\t\tcancelDelayLoad(element);\n\t\t}\n\t},\n\t_onIntersection: function(entries) {\n\t\tentries.forEach(this._manageIntersection.bind(this));\n\t\tthis._elements = purgeElements(this._elements);\n\t},\n\t_setObserver: function() {\n\t\tif (!supportsIntersectionObserver) {\n\t\t\treturn;\n\t\t}\n\t\tthis._observer = new IntersectionObserver(\n\t\t\tthis._onIntersection.bind(this),\n\t\t\tgetObserverSettings(this._settings)\n\t\t);\n\t},\n\n\tloadAll: function() {\n\t\tthis._elements.forEach(element => {\n\t\t\tthis.load(element);\n\t\t});\n\t\tthis._elements = purgeElements(this._elements);\n\t},\n\n\tupdate: function(elements) {\n\t\tconst settings = this._settings;\n\t\tconst nodeSet =\n\t\t\telements ||\n\t\t\tsettings.container.querySelectorAll(settings.elements_selector);\n\n\t\tthis._elements = purgeElements(Array.prototype.slice.call(nodeSet)); // nodeset to array for IE compatibility\n\n\t\tif (isBot || !this._observer) {\n\t\t\tthis.loadAll();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._elements.forEach(element => {\n\t\t\tthis._observer.observe(element);\n\t\t});\n\t},\n\n\tdestroy: function() {\n\t\tif (this._observer) {\n\t\t\tpurgeElements(this._elements).forEach(element => {\n\t\t\t\tthis._observer.unobserve(element);\n\t\t\t});\n\t\t\tthis._observer = null;\n\t\t}\n\t\tthis._elements = null;\n\t\tthis._settings = null;\n\t},\n\n\tload: function(element, force) {\n\t\trevealElement(element, this._settings, force);\n\t}\n};\n\n/* Automatic instances creation if required (useful for async script loading) */\nif (runningOnBrowser) {\n\tautoInitialize(LazyLoad, window.lazyLoadOptions);\n}\n\nreturn LazyLoad;\n\n})));\n"]}